@import "whitespace-reset"

$prefixes: moz webkit o ms khtml

= user-select($val)
  @each $prefix in $prefixes
    -#{$prefix}-user-select: $val
  user-select: $val

= border-radius($radius)
  -moz-border-radius: $radius
  border-radius: $radius

= border-top-right-radius($radius)
  -moz-border-radius-topright: $radius
  border-top-right-radius: $radius

= border-top-left-radius($radius)
  -moz-border-radius-topleft: $radius
  border-top-left-radius: $radius

= border-bottom-right-radius($radius)
  -moz-border-radius-bottomright: $radius
  border-bottom-right-radius: $radius

= border-bottom-left-radius($radius)
  -moz-border-radius-bottomleft: $radius
  border-bottom-left-radius: $radius

= box-shadow($arguments)
  -webkit-box-shadow: $arguments
  -moz-box-shadow: $arguments
  box-shadow: $arguments

= opacity($val)
  opacity: $val
  filter: alpha(opacity=$val*100)

= gradient-bg($color1, $color2, $color3: null, $horizontal: false)
  $end: 0 100%
  $angle: 90deg
  $type: 0
  @if $horizontal == true
    $end: 100% 0
    $angle: 0deg
    $type: 1
  @if $color3 == null
    background-color: $color1
  @else
    background-color: $color3
  background-image: -moz-linear-gradient(100% 100% $angle, $color2, $color1)
  background-image: -webkit-gradient(linear, 0% 0%, $end, from($color1), to($color2))
  $color1: ie_color_fix($color1)
  $color2: ie_color_fix($color2)
  $color3: ie_color_fix($color3)
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=$type, startColorstr=#{$color1}, endColorstr=#{$color2})
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(GradientType=$type, startColorstr=#{$color1}, endColorstr=#{$color2})

= gradient-stop($color1, $color2, $color3, $color4)
  background-color: $color1
  @each $prefix in $prefixes
    background-image: -#{$prefix}-linear-gradient(top, $color1 0%, $color2 50%, $color3 51%, $color4 100%)
  background-image: linear-gradient(top, $color1 0%, $color2 50%, $color3 51%, $color4 100%)
  $color1: ie_color_fix($color1)
  $color4: ie_color_fix($color4)
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$color1}, endColorstr=#{$color4},GradientType=0 )
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color4})

= fixed-gradient($color1, $color2, $length)
  @each $prefix in $prefixes
    background-image: -#{$prefix}-linear-gradient(top, $color1 0%, $color2 $length)
  background-image: linear-gradient(top, $color1 0%, $color2 $length)

= transition($args)
  -webkit-transition: $args
  -moz-transition: $args
  -o-transition: $args

= rotate($deg)
  @each $prefix in $prefixes
    -#{$prefix}-transform: rotate(#{$deg}deg)
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$deg / 90})

= font-face($font_name, $font_path)
  @font-face
    font-family: '#{$font_name}'
    src: asset-url('/assets/#{$font_path}.otf')

= image-replace($img, $color: transparent, $type: png, $position: 0 0, $repeat: no-repeat)
  display: block
  font-size: 1px
  text-indent: -8685px
  overflow: hidden
  background: $color image-url("#{$img}.#{$type}") $position $repeat

= box-sizing($type: border-box)
  @each $prefix in moz, ms, webkit
    -#{$prefix}-box-sizing: $type
  box-sizing: $type

= button($color1, $color2)
  padding: 8px 9px
  border: 1px solid $color1 - 3
  color: #ffffff
  font-size: 1.01em
  +gradient-bg($color1, $color2)
  +border-radius(3px)
  &:hover
    +box-shadow(none)

